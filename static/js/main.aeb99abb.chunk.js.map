{"version":3,"sources":["assets/slide1.jpg","assets/slide2.jpg","assets/slide3.jpg","assets/slide4.jpg","assets/slide5.jpg","Slide.js","Spacer.js","Dot.js","Dots.js","Slideshow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","s","memo","position","transition","image","className","src","alt","w","h","style","width","height","slideId","dotId","slides","map","slide","id","key","Slideshow","props","startCarousel","carouselInterval","setInterval","transitionSlides","setSlideState","slide1","slide2","currentId","setState","state","setTimeout","resetSlideOffScreen","length","resetSlideTransitions","this","clearInterval","Component","slide3","slide4","slide5","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aeb99abb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slide1.be60cd01.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide2.90fe4a23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide3.1573f571.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide4.6be3bcf9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide5.af21da0b.jpg\";","//===========================================\r\n// IMPORT DEPENDENCIES\r\n//===========================================\r\nimport React, { memo } from 'react';\r\n\r\n//===========================================\r\n// STYLES OBJECT\r\n//===========================================\r\nconst s = {\r\n\tcontainer: 'abs fullW fullH',\r\n\tslideImage: 'fullH fullW imgCover'\r\n};\r\n\r\n//===========================================\r\n// SLIDE FUNCTIONAL COMPONENT\r\n//===========================================\r\nconst Slide = ({ position, transition, image }) => {\r\n\treturn (\r\n\t\t<div className={s.container + ' ' + position + ' ' + transition}>\r\n\t\t\t<img src={image} className={s.slideImage} alt=\"slide\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default memo(Slide);\r\n","//===========================================\r\n// IMPORT DEPENDENCIES\r\n//===========================================\r\nimport React, { memo } from 'react';\r\n\r\n//===========================================\r\n// SPACER FUNCTIONAL COMPONENT\r\n//===========================================\r\nconst Spacer = ({ w, h }) => {\r\n\tif (w) {\r\n\t\treturn <div style={{ width: w }} className=\"fullH\" />;\r\n\t} else if (h) {\r\n\t\treturn <div style={{ height: h }} className=\"fullW\" />;\r\n\t}\r\n};\r\n\r\nexport default memo(Spacer);\r\n","//===========================================\r\n// IMPORT DEPENDENCIES\r\n//===========================================\r\nimport React, { memo } from 'react';\r\nimport Spacer from './Spacer';\r\n\r\n//===========================================\r\n// DOT FUNCTIONAL COMPONENT\r\n//===========================================\r\nconst Dot = ({ slideId, dotId }) => (\r\n\t<div className=\"row\">\r\n\t\t<Spacer w={5} />\r\n\t\t<div className={'dot ' + (slideId === dotId ? 'white' : 'white50')} />\r\n\t\t<Spacer w={5} />\r\n\t</div>\r\n);\r\n\r\nexport default memo(Dot);\r\n","//===========================================\r\n// IMPORT DEPENDENCIES\r\n//===========================================\r\nimport React, { memo } from 'react';\r\nimport Dot from './Dot';\r\n\r\n//===========================================\r\n// STYLE OBJECT\r\n//===========================================\r\nconst s = {\r\n\tcontainer: 'fullW height70 abs bot0 fCenter black50'\r\n};\r\n\r\n//===========================================\r\n// DOTS FUNCTIONAL COMPONENT\r\n//===========================================\r\nconst Dots = ({ slideId, slides }) => {\r\n\treturn (\r\n\t\t<div className={s.container}>\r\n\t\t\t<div className=\"row\">{slides.map((slide, id) => <Dot slideId={slideId} dotId={id} key={id} />)}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default memo(Dots);\r\n","//===========================================\r\n// IMPORT DEPENDENCIES\r\n//===========================================\r\nimport React, { Component } from 'react';\r\nimport Slide from './Slide';\r\nimport Dots from './Dots';\r\n\r\n//===========================================\r\n// CREATE STYLES OBJECT\r\n//===========================================\r\nconst s = {\r\n\tcontainer: 'fullW fullH rel overflowH',\r\n\tonScreen: 'left0',\r\n\toffScreenRight: 'left100vw',\r\n\toffScreenLeft: 'leftM100vw',\r\n\ttransition: 'transition1l'\r\n};\r\n\r\n//===========================================\r\n// SLIDESHOW COMPONENT\r\n//===========================================\r\nclass Slideshow extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tslide1: {\r\n\t\t\t\tid: 0,\r\n\t\t\t\tposition: s.onScreen,\r\n\t\t\t\ttransition: true\r\n\t\t\t},\r\n\t\t\tslide2: {\r\n\t\t\t\tid: 1,\r\n\t\t\t\tposition: s.offScreenRight,\r\n\t\t\t\ttransition: true\r\n\t\t\t},\r\n\t\t\tcurrentId: 0\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.startCarousel();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.carouselInterval);\r\n\t}\r\n\r\n\tstartCarousel = () => {\r\n\t\tthis.carouselInterval = setInterval(() => {\r\n\t\t\tthis.transitionSlides();\r\n\t\t}, 4000);\r\n\t};\r\n\r\n\tsetSlideState = (slide1, slide2, currentId) => {\r\n\t\tthis.setState({\r\n\t\t\tslide1: slide1,\r\n\t\t\tslide2: slide2,\r\n\t\t\tcurrentId: currentId\r\n\t\t});\r\n\t};\r\n\r\n\ttransitionSlides = () => {\r\n\t\tconst { slide1, slide2 } = this.state;\r\n\t\tlet currentId;\r\n\t\tif (slide1['position'] === s.onScreen) {\r\n\t\t\tslide1['position'] = s.offScreenLeft;\r\n\t\t\tslide2['position'] = s.onScreen;\r\n\t\t\tcurrentId = slide2.id;\r\n\t\t} else {\r\n\t\t\tslide1['position'] = s.onScreen;\r\n\t\t\tslide2['position'] = s.offScreenLeft;\r\n\t\t\tcurrentId = slide1.id;\r\n\t\t}\r\n\t\tthis.setSlideState(slide1, slide2, currentId);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.resetSlideOffScreen();\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\tresetSlideOffScreen = () => {\r\n\t\tconst { slide1, slide2, currentId } = this.state;\r\n\t\tconst { slides } = this.props;\r\n\t\tif (slide1['position'] === s.offScreenLeft) {\r\n\t\t\tslide1['transition'] = false;\r\n\t\t\tslide1['position'] = s.offScreenRight;\r\n\t\t\tslide1['id'] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\r\n\t\t} else {\r\n\t\t\tslide2['transition'] = false;\r\n\t\t\tslide2['position'] = s.offScreenRight;\r\n\t\t\tslide2['id'] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\r\n\t\t}\r\n\t\tthis.setSlideState(slide1, slide2, currentId);\r\n\t\tthis.resetSlideTransitions(slide1, slide2, currentId);\r\n\t};\r\n\r\n\tresetSlideTransitions = (slide1, slide2, currentId) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tslide1['transition'] = true;\r\n\t\t\tslide2['transition'] = true;\r\n\t\t\tthis.setSlideState(slide1, slide2, currentId);\r\n\t\t}, 500);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { slide1, slide2, currentId } = this.state;\r\n\t\tconst { slides } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className={s.container}>\r\n\t\t\t\t<Slide\r\n\t\t\t\t\timage={slides[slide1.id]}\r\n\t\t\t\t\tposition={slide1.position}\r\n\t\t\t\t\ttransition={slide1.transition ? s.transition : ''}\r\n\t\t\t\t/>\r\n\t\t\t\t<Slide\r\n\t\t\t\t\timage={slides[slide2.id]}\r\n\t\t\t\t\tposition={slide2.position}\r\n\t\t\t\t\ttransition={slide2.transition ? s.transition : ''}\r\n\t\t\t\t/>\r\n\t\t\t\t<Dots slideId={currentId} slides={slides} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Slideshow;\r\n","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { Component } from 'react';\nimport Slideshow from './Slideshow';\nimport slide1 from './assets/slide1.jpg';\nimport slide2 from './assets/slide2.jpg';\nimport slide3 from './assets/slide3.jpg';\nimport slide4 from './assets/slide4.jpg';\nimport slide5 from './assets/slide5.jpg';\n//import logo from './logo.svg';\n//import './App.css';\n\n//===========================================\n// CREATE STYLES OBJECT\n//===========================================\nconst s = {\n\tcontainer: 'screenW screenH dGray col',\n\theader: 'flex1 fCenter fSize2',\n\tmain: 'flex8 white',\n\tfooter: 'flex1 fCenter'\n};\n\n//===========================================\n// SLIDES DATA\n//===========================================\nconst slides = [ slide1, slide2, slide3, slide4, slide5 ];\n\n//===========================================\n// APP COMPONENT\n//===========================================\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className={s.container}>\n\t\t\t\t<div className={s.header}>Slideshow</div>\n\t\t\t\t<div className={s.main}>\n\t\t\t\t\t<Slideshow slides={slides} />\n\t\t\t\t</div>\n\t\t\t\t<div className={s.footer}>Samuelssons slideshow</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}